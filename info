;; lisp start
атом или точененая пара
атом (неделимое):
	константы (литералы)
		  1, а, 12.32, 2/3, С#(1 -2)
	символы:
		имена функций, переменных и т.д, nil

точечная пара:
	 (1 . 2) ((1 . 2) . (3 . 5))

список:
	(a . (b . (c . ()))) = (a b c) ; (сокращенно)

неправильный или точечный список:
	     (a b c . d) = (a . (b . (c . d)))

спецформы:
	очень хитрая штука, может манипулировать контекстами и вообще хрен пойми как она вычисляется
	пример: quote или ' - запрет вычисления

eq - истина если 2 объекта один и тот же
eql - в дополнение к eq истина если одно число (одного типа) или один и тот же алфавитный символ

функции:


rplaca - заменить car
rplacd - заменить cdr

setf - меняет значение в памяти, которая соответствует тому, где лежит вычисленное значение

next: 326 and 102
